# -*- coding: utf-8 -*-
"""Dec7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NIg6JnJ3ykYrKrrG6czTUio0iHSqL9OU
"""

import numpy as np
import pandas as pd

with open('Dec7.txt','r') as f:
  lines = f.readlines()

def preprocess_hand(inhand):
  to_change = {'A': 'F', 'K': 'E', 'Q': 'D', 'J': 'C', 'T':'B'}

  for char in to_change.keys():
    inhand = inhand.replace(char, to_change[char])

  return(inhand)

def count_cards(instr):
  counts = []
  for cnt1 in range(len(instr)):
    numsame = sum([c==instr[cnt1] for c in instr])
    counts.append(numsame)
  return(counts)

np.unique(list('AACAD'),return_counts=True)

hands = [ [],[], [],[], [], [], []]
#bids = [ [],[], [],[], [], [], []]
for line in lines:
  temp = line.split()
  #
  hand = preprocess_hand(temp[0])
  #print(hand)
  bid = int(temp[1])

  uniquetypes = len(set(hand))

  match uniquetypes:
    case 1:             # AAAAA
      handtype = 1  # 5 Kind
    case 2:             # AAAAB  AAABB
      handtype = 3 if (max(count_cards(hand)) == 3) else 2    # Full house=3, 4 kind = 2
    case 3:             # AAABC AABBC
      handtype = 5 if (max(count_cards(hand)) == 2) else 4    # Two pairs =5, 3 kind = 4
    case 4:             # AAAAB
      handtype = 6  # 4 kind = 6
    case 5:             # AAAAA
      handtype = 7  # high card = 7

  hands[handtype-1].append( [hand, bid] )

# Convert all the lists in hands to Pandas data frames, sort each data frame and concatentate into one dataframe
for cnt in range(len(hands)):
  temp_df =  pd.DataFrame(hands[cnt],columns=['Hand', 'Bid'])
  temp_df.sort_values(by='Hand',ascending=False, inplace=True)
  hands[cnt] = temp_df

hands_df = pd.concat(hands,ignore_index=True)
hands_df['Rank'] = list(range(hands_df.shape[0],0,-1))

# Find the total prize (rank * bid)
prize = np.sum(hands_df['Bid']*hands_df['Rank'])
print(f'Part1: { prize }')

hands_df.head(5)

"""## Part2 The 'J' is now a Joker.  So will become lowest ranked card but can act as wild_card
Need to reprocess all hands with this new ordering
"""

def preprocess_hand_joker(inhand):
  to_change = {'A': 'F', 'K': 'E', 'Q': 'D', 'J': '0', 'T':'B'}

  for char in to_change.keys():
    inhand = inhand.replace(char, to_change[char])

  return(inhand)

hands2 = [ [],[], [],[], [], [], []]
#bids = [ [],[], [],[], [], [], []]
for line in lines:
  temp = line.split()
  #
  hand = preprocess_hand_joker(temp[0])
  #print(hand)
  bid = int(temp[1])

  uniquetypes = len(set(hand))
  num_jokers = sum([c=='0' for c in hand])
  max_nonjoker = max(count_cards(hand.replace('0',''))) if num_jokers<5 else 0

  match uniquetypes:
    case 1:             # AAAAA
      handtype = 1                  #### 5 Kind
    case 2:             # AAAAB  AAABB
      match  max_nonjoker + num_jokers:
        case 3:         # AAABB
          handtype = 3              #### full house
        case 4:         # AAAAB
          handtype = 2              #### 4 kind
        case 5:         # AAAAJ or JJJJB
          handtype = 1              #### 5 kind
    case 3:             # AAABC AABBC
      match max_nonjoker + num_jokers:
        case 2:    # AABBC (no jokers)
          handtype = 5              #### 2 pairs
        case 3:
          match num_jokers:
            case 0:     #AAABC
              handtype = 4          #### 3 Kind
            case 1:  #AABBJ
              handtype = 3          #### Full house
        case 4:       #AAABJ or JJJBC or JJBBC
          handtype = 2              #### 4 kind
    case 4:
      handtype = 6 if num_jokers==0 else 4       #### pair = 6, 3 of a kind = 4
    case 5:
      handtype = 7 if num_jokers==0 else 6       #### High card = 7, pair = 6

  hands2[handtype-1].append( [hand, bid] )

# Convert all the lists in hands to Pandas data frames, sort each data frame and concatentate into one dataframe
for cnt in range(len(hands2)):
  temp_df =  pd.DataFrame(hands2[cnt],columns=['Hand', 'Bid'])
  temp_df.sort_values(by='Hand',ascending=False, inplace=True,ignore_index=True)
  hands2[cnt] = temp_df

hands2_df = pd.concat(hands2,ignore_index=True)
hands2_df['Rank'] = list(range(hands2_df.shape[0],0,-1))

# Find the total prize (rank * bid)
prize = np.sum(hands2_df['Bid']*hands2_df['Rank'])
print(f'Part2: { prize }')

Part2: 251003917

