# -*- coding: utf-8 -*-
"""Dec1_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wM5OibV3QDerftj2haNNPPWBZ6FySibm
"""

with open('dec1.txt','r') as f:
  lines = f.readlines()

lines[3]

# Part 1: Search only for numbers

numbers = []
for line in lines:
  num = ''
  for c in line:
    if c.isnumeric():
      num=num + c
    if len(num)>2:
      num = num[0] + num[-1]
    if len(num) == 1:
      num = num + num
  if not not num:
    numbers.append(int(num))

print(sum(numbers))

numbers[0:3]

# Part 2: Search for spelled out numbers in the text.  Then find the first and last digit in the new string

texttargets = [ 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
savedlines = []
numbers2 = []
for line in lines:
  # Replace the text numbers with thier numberic equivalent
  templine = list(line)
  for indx in range(len(texttargets)):
    # Scan from the back and find last occurance of target in string
    position = line.rfind(texttargets[indx])
    while position >-1:
      templine[position]=str(indx)
      position = line[0:position].rfind(texttargets[indx])

  # Create a string from the templine
  templine = ''.join(templine)
  savedlines.append(templine)
  #print(templine)
  #Scan the templine
  num = ''
  for c in templine:
    if c.isnumeric():
      num=num + c
    if len(num)>2:
      num = num[0] + num[-1]
    if len(num) == 1:
      num = num + num
  if not not num:
    numbers2.append(int(num))

savedlines[-6:]

lines[-6:-1]

len(numbers2)

print(sum(numbers2))


